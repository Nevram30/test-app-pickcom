datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum Role {
    ADMIN
    CLIENT
    AGENCY
}

enum ProjectType {
    WEB
    MOBILE
    DESKTOP
}

enum ProjectStage {
    PLANNING
    DESIGN
    DEVELOPMENT
    TESTING
    DEPLOYMENT
}

enum IndustryType {
    IT
    FINANCE
    HEALTHCARE
    EDUCATION
    RETAIL
    MANUFACTURING
    OTHER
}

enum ServiceTypes {
    WEB_DESIGN
    WEB_DEVELOPMENT
    MOBILE_DESIGN
    MOBILE_DEVELOPMENT
    DESKTOP_DESIGN
    DESKTOP_DEVELOPMENT
}

model User {
    id            String          @id @default(cuid())
    email         String          @unique
    role          Role
    clientPosts   ClientPost[]
    agencyPosts   AgencyPost[]
    Address       Address?
    pickedProject PickedProject[]
    PickedAgency  PickedAgency[]

    @@index([role])
}

model projectType {
    id            String       @id @default(cuid())
    name          ProjectType
    clientPosts   ClientPost[]
    projectTypeId String

    @@index([name])
}

model projectStage {
    id             String       @id @default(cuid())
    name           ProjectStage
    clientPosts    ClientPost[]
    projectStageId String

    @@index([name])
}

model PickedProject {
    id           String     @id @default(cuid())
    clientPost   ClientPost @relation(fields: [clientPostId], references: [id])
    clientPostId String
    agency       User       @relation(fields: [agencyId], references: [id])
    agencyId     String

    @@unique([clientPostId, agencyId])
}

model PickedAgency {
    id           String     @id @default(cuid())
    agencyPost   AgencyPost @relation(fields: [agencyPostId], references: [id])
    agencyPostId String
    client       User       @relation(fields: [clientId], references: [id])
    clientId     String

    @@unique([agencyPostId, clientId])
}

model ClientPost {
    id                  String          @id @default(cuid())
    project_title       String          @db.VarChar(255)
    project_description String          @db.VarChar(255)
    project_type        projectType     @relation(fields: [projectTypeId], references: [id])
    project_stage       projectStage    @relation(fields: [projectStageId], references: [id])
    user                User            @relation(fields: [user_id], references: [id])
    user_id             String
    projectTypeId       String
    projectStageId      String
    pickedBy            PickedProject[]

    @@index([user_id])
    @@index([projectTypeId])
    @@index([projectStageId])
}

model AgencyPost {
    id                 String         @id @default(cuid())
    agency_name        String?        @db.VarChar(255)
    agency_description String         @db.VarChar(255)
    agency_address     Address[]
    phone_number       String
    website_url        String
    industry_type      IndustryType[]
    size               Int
    foundedYear        Int
    serviceTypesId     ServiceTypes[]
    user               User           @relation(fields: [user_id], references: [id])
    user_id            String
    pickedBy           PickedAgency[]

    @@index([user_id])
}

model Address {
    id           String      @id @default(cuid())
    street       String
    city         String
    state        String
    postalCode   String
    country      String
    user         User        @relation(fields: [user_id], references: [id])
    user_id      String      @unique
    AgencyPost   AgencyPost? @relation(fields: [agencyPostId], references: [id])
    agencyPostId String?

    @@index([user_id])
    @@index([agencyPostId])
}
